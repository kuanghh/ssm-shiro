<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.khh.web.dao.UserMapper">
  <resultMap id="UserResultMap" type="com.khh.web.domain.User">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="is_valid"  property="isValid" />
  </resultMap>

  <resultMap id="UserBeanResultMap" type="com.khh.web.domain.User">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <collection property="roleBeanList" ofType="com.khh.core.bean.RoleBean" javaType="ArrayList" >
      <id column="r_id" property="id" />
      <result column="r_name" property="name" />
      <result column="r_sign" property="sign" />
      <result column="r_description" property="description" />
    </collection>
  </resultMap>


  <sql id="Base_Column_List">
    id, name, password, state,email, create_time, is_valid
  </sql>
  <sql id="add_column_list">
    id, name, password, state,email, create_time, is_valid
  </sql>
  <insert id="insert" parameterType="com.khh.web.domain.User">
    insert into t_user(<include refid="add_column_list" />)
    values(#{id},#{name},#{password},#{state},#{email},#{createTime},#{isValid})
  </insert>

  <delete id="deleteById" >
    delete from t_user where id = #{id}
  </delete>

  <update id="update" parameterType="com.khh.web.domain.User" >
    update t_user
    set
      id = id,
      <if test="name != null">
        name = #{name},
      </if>
      <if test="password != null">
        password = #{password},
      </if>
      <if test="state">
        state = #{state},
      </if>
      <if test="email">
        email = #{email},
      </if>
      <if test="createTime != null">
        create_time = #{createTime},
      </if>
      <if test="isValid != null">
          is_valid = #{isValid},
      </if>
      id =id
    where
      id = #{id}
  </update>

  <select id="findById" resultMap="UserResultMap">
      select * from t_user where id=#{id}
  </select>

  <select id="authenticationByName" resultMap="UserResultMap" parameterType="com.khh.web.domain.User">
    select * FROM t_user
    where name=#{name} and password=#{password}
  </select>

  <select id="authenticationByEmail" resultMap="UserResultMap" parameterType="com.khh.web.domain.User">
    select * FROM t_user
    where email=#{email} and password=#{password}
  </select>

  <select id="findByUserName" resultMap="UserResultMap" >
    select * FROM t_user
    where name=#{name}
  </select>

  <select id="findByUserEmail" resultMap="UserResultMap">
    select * FROM t_user
    where email=#{email}
  </select>

  <select id="findAllWithDetails" resultMap="UserResultMap">
    select r.*
      from
      t_user_role ur left join t_user u on  ur.user_id = u.id
               left join t_role r ON  ur.role_id = r.id
      where
      u.is_valid = 1 AND
      ur.is_valid = 1 AND
      r.is_valid = 1
  </select>

</mapper>